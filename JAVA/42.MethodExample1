
public class MethodExample1 {

	public static void main(String[] args) {

//		for문의 i<=10;에서 10값을 수정하면서 원하는 누적합을 계산한다.
//		int sum = 0;
//		for (int i =1; i<=10;i++) {
//			
//			sum +=i;
//			
//		}
//		System.out.println("1~10까지 누적합: "+sum);
//		
//		sum = 0;
//		for (int i =1; i<=40;i++) {
//			
//			sum +=i;
//			
//		}
		System.out.println("1~10까지 누적합: "+calcSum(10));
		System.out.println("1~20까지 누적합: "+calcSum(20));
		
		int result = calcSum(100); //함수 호출!!
//		int result = calcSum(100,200); //int 2개를 처리할수 없다!
		
		System.out.println(result);
		
		System.out.println("4~7까지 누적합: "+ calcSum2(4,7));
		
		/*
		 * 1.메서드는 정의(선언)하는 과정과 호출하는 과정이 있습니다.
		 * 2.메서드 선언은 메서드 내부에서는 할 수 없습니다. 반드시 메서드 
		 *   블록 외부에서만 선언이 가능합니다. 클래스 내부라면 어떤 위치든 선언이
		 *   가능합니다. => 함수 밖, 클래스 내부
		 * 3.메서드 내부에서는 다른 메서드의 호출만 가능합니다.
		 * 4.호출하는 과정은 메서드를 사용하는 과정이며 해당 메서드가 필요로 하는
		 *   데이터(매개값)를 메서드 내부로 전달하면서 해당 메서드는 매개값을 통해
		 *   처리한 결과값을 호출부로 다시 반환해줍니다.
		 *      
		 */
		
	}//end main method
	
	public static int calcSum(int x){
		//calcSum() 괄호안헤 x값을 정의해준다.
		//return 값으로 줄 데이터 타입을 calcSum 앞에 선언한다
		//calcSum이라는 함수는 사용자가 나한테 int x를 주면
		//int 타입 sum을 돌려줍니다.
		int sum = 0;
		for (int i =1; i<= x ;i++) {
			
			sum +=i;
			
		}
		return sum; //사용자에게 돌려줄 값
		
	}
	
	public static int calcSum2(int begin, int end) {
		//변수 이름은 나중을 위해 알기 쉽게 지정해주기 
		double sum = 0;
		for (int i = begin;i <= end; i++) {
			sum += i;
			
		}
		
		return (int)sum; //함수 정의보다 큰 데이터 타입은 형변환 필요 
		
	}
	
	

}
