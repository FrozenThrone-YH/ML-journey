package encap.goodcase;

public class MyBirth {
	/*
	 * 은닉(캡슐화)을 사용하려면 데이터 참조를 제한할 멤버변수의 
	 * 앞에 private제한자를 붙입니다.
	 */
	private int year;
	private int month;
	private int day;
	
	//이 변수들을 쓸 수 있는 곳은 이 클래스 뿐이다. 
	//메서드를 통해서 검증을 하고 입력해주는 것.
	
	/*
	 * 은닉된 멤버변수에 접근하기 위해서는 
	 * 클래스 설계자가 미리 만들어 놓은 setter/getter 메서드를 
	 * 사용하여 데이터에 접근해야 합니다. 
	 * 1. setter 메서드 선언
	 *  1) setter 메서드는 은닉변수에 값을 저장시키기 위한 메서드입니다.
	 *  2) 메서드의 접근제한자를 public으로 설정하여 이름은 일반적으로 
	 *     set + 멤버 변수이름으로 지정합니다.
	 * 
	 */
	public void setDay(int day) {
		if (day<1 || day >31) {
			
			System.out.println("잘못된 일수 입력입니다.");
		} else {
			this.day = day;
		}
	}
		
	/*
	 * getter 메서드 선언
	 * 1. getter 메서드는 은닉변수의 값을 얻어낼 떄 사용하는 메서드입니다.
	 * 2. setter와 마찬가지로 public 제한으로 외부에 메서드를 공개하고
	 * 이름은 일반적으로 get+변수이름으로 저장합니다.
	 */
	
	public int getDay() {
		return this.day;
		
	}
	
	public void setYear(int year) {
		if (year <0 || year >3000) {
			System.out.println("1~3000사이 숫자를 입력해주세요");
		} else {
			this.year = year;
		}
	}
	
	public int getYear() {
		
		return this.year;
	}
	
	public void setMonth(int month) {
		if (month <1 || month>12) {
			System.out.println("잘못된 월 입력입니다.");
		} else {
			this.month = month;
		}
	}
	public int getMonth() {
		return this.month;
	}
		
	}
	
	//꿀팁 alt + shift + s -generate constructor using field
    // 하면 빠르게 생성할 수 있다. package encap.goodcase;

public class MainClass {

	public static void main(String[] args) {
		
		MyBirth b = new MyBirth();
		
//		b.year = 2018;
//		b.month = 10;
//		b.day = 31
		
		b.setDay(28);
		System.out.println(b.getDay());
		//은닉은 데이터에 직접 접근하지 못하고 유효성을 검증하고 입력하기 위한 방법이다.

	}

}
