"""
#설치
 1) R다운로드 - R플랫폼 사용
     https://www.r-project.org
     download r 클릭 
     korea에서 아무거나 클릭 
     download for windows(바로 실행하지 말고, 저장을 따로 하고 실행)
 
 2) R studio 다운로드
     https://rstudio.com/products/rstudio/download/
     download - free
     

 3) JAVA JDK 다운로드
     https://www.oracle.com/technetwork/java/javase/downloads/index.html
     java se - java se 8 - javase 8u231 - accept license 체크 하고 64비트를 다운로드 
     - 오라클 로그인 뜬다. 오라클 아이디 만들어놓는 것이 좋다. 

 
c드라이브에 r_data 폴더를 생성후(바로 폴더 만들기) 다운로드 받은 data파일을 압축풀어서 폴더를 제외한 파일만 복사 붙여넣기

data 파일을 쓰기 위한 경로 설정을 C://r_data 로할 것 

인터프리터 - 명령을 한줄 한줄 실행해주는 것. 
R이 인터프리터언어이다.
한줄 단위로 실행하기 때문에 에러를 바로 알 수 있다.
반복문이나 함수를 사용할때 불편하다.

스크립트까지 같이 컴파일할 수 있는 환경을 마련해주는 것이 R studio


#R studio 설정

file - new file - R script로 파일을 만들면, 
인터프리터로 사용할수도 있고, 컴파일러로도 사용할수 있다. 

tools - global option - code 
editing - soft-wrap R source files 체크 
saving - default text encoding UTF-8로 변경 

appearance - font size : 16 정도 

#jdk 확인

c드라이브 - program files - java - jdk 231 (지금깐거)- bin - 주소창 클릭
경로 복사 
C:\Program Files\Java\jdk1.8.0_231\bin 

내pc - 오른쪽 클릭 - 속성 - 고급시스템설정 - 환경변수 - 시스템변수에서 path 더블 클릭
- 새로만들기 - 주소 붙여 넣기 - 확인 

※path 설정 제대로 됏는지 확인
cmd - javac 엔터 아래 화면이 나오면 정상 

Usage: javac <options> <source files>
where possible options include:
  -g                         Generate all debugging info
  -g:none                    Generate no debugging info
  -g:{lines,vars,source}     Generate only some debugging info
  -nowarn                    Generate no warnings
  -verbose                   Output messages about what the compiler is doing
  -deprecation               Output source locations where deprecated APIs are used
  -classpath <path>          Specify where to find user class files and annotation processors
  -cp <path>                 Specify where to find user class files and annotation processors
  -sourcepath <path>         Specify where to find input source files
  -bootclasspath <path>      Override location of bootstrap class files
  -extdirs <dirs>            Override location of installed extensions
  -endorseddirs <dirs>       Override location of endorsed standards path
  -proc:{none,only}          Control whether annotation processing and/or compilation is done.
  -processor <class1>[,<class2>,<class3>...] Names of the annotation processors to run; bypasses default discovery process
  -processorpath <path>      Specify where to find annotation processors
  -parameters                Generate metadata for reflection on method parameters
  -d <directory>             Specify where to place generated class files
  -s <directory>             Specify where to place generated source files
  -h <directory>             Specify where to place generated native header files
  -implicit:{none,class}     Specify whether or not to generate class files for implicitly referenced files
  -encoding <encoding>       Specify character encoding used by source files
  -source <release>          Provide source compatibility with specified release
  -target <release>          Generate class files for specific VM version
  -profile <profile>         Check that API used is available in the specified profile
  -version                   Version information
  -help                      Print a synopsis of standard options
  -Akey[=value]              Options to pass to annotation processors
  -X                         Print a synopsis of nonstandard options
  -J<flag>                   Pass <flag> directly to the runtime system
  -Werror                    Terminate compilation if warnings occur
  @<filename>                Read options and filenames from file


왼쪽 상단 - 코드를 넣는 작업영역
왼쪽 하단 - 결과를 보여줌 (텍스트적인 콘솔)
오른쪽 하단 flot(차트/워드클라우드) / viewer / packages(기본적으로 제공되는 패키지가 나온다.) 

※R프로그래밍 팁1
실행을 했는데, r 리세션 다시 리스타트 메세지 뜨면 절대 ok누르지 말것, no 누른다음에 다시 돌려본다. 
안돌아가면 다시 한번더, 그때 리세션 눌러야한다. 아니면 그 동안 부텨놓은 패키지가 다 날아간다. 


오른쪽 상단 - 그동안 사용했던 명령어에 대한 히스토리/환경이 나타난다. 

※R프로그래밍 팁2
계속 데이터를 가공해서 변수에 담아놓는다.
작업을 하고 난 뒤 수정본이 여러개가 있을 수 있다. update되는 데이터가 있는데
따로 저장을 해놓는 연습을 해놔야한다. R에서는 꼭해야한다. 
안 그러면 마지막 데이터가 변수가 된다. 벡업 데이터를 찾을 수 가 없다. 
그렇게되면 똑같은 작업을 계속해야한다.

A1 / A2 / A3 이렇게 변수명을 다르게해서 백업데이터를 저장해놓는 연습을 해야한다. 
A3가 에러나면 A2를 불러오면 된다. 

History 탭에서 To source를 하면 데이터를 불러온다. 
ctrl 클릭하면 각각 선택
shiht 클릭하면 연속 선택 후 to source하면 명령어 치는 곳으로 함수가 간다. 

명령어 함수를 쉽게 외우는 방법은? - 단어 그대로 원초적인 단어 뜻 그대로 해석을 한다.
setwd -> set 설정하다 wd working directory를 

crtl + enter를 눌러야 명령 실행

#함수 - setwd
setwd("c:\\r_data") : 데이터를 불러올 디렉토리 설정 

#함수 - getwd
wd가 설정된 주소를 가져온다. 
getwd()
결과값 : [1] "c:/r_data"

------------------------------------------------------------------------------------------------------
2교시



"""
