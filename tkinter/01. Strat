"""
# GUI 프로그래밍(교안과 함께 참조)

- 우리가 흔히 알고 있는 버튼을 활용해 동작시키는 프로그래밍.

- 아웃풋을 만들어내서 배포하는데 주로 사용함(다른 두 가지 방법은 웹앱 or 어플리케이션화)

- .exe파일로 만들어 사용자에게 제공하는것이 최종 목표
"""

# 파이썬 GUI 프로그래밍을 위한 라이브러리 tkinter 임포트 
from tkinter import *

#하단의 root 라는 변수가 바로 우리가 알고 있는 창이 됨

root = Tk()

# 실행해도 아무일도 일어나지 않는다.
# 이 창은 로직상 마지막에 위치해야 하기 때문에 코드 박스 순서를 가장 하단에 둡니다!
# root라는 변수를 유지시키기 위해 .mainloop()가 필요함
# root = Tk()는 단순히 창을 만들기 위함

# root 변수에 저장된 창을 유지시키기 위해서는 .mainloop()라는 메서드가 필요함
root.mainloop()

"""
### 창설정
- 창 이름은 .title()로 설정
- 창 크기는 .configure(width="숫자", height="숫자") 로 할 경우 픽셀단위 설정
- .configure(width="숫자m", height="숫자m") 로 할 경우 mm단위로 설정
- 창 크기 설정은 .place()를 사용할때만 사용가능
- .grid() 사용시는 grid()에 따른 부품크기에 창이 자동으로 맞춰진다.
"""

# 타이틀(창 상단에 찍힐 이름) 바꾸기
root.title("파이썬 GUI 프로그래밍")

# 창 크기 조정하기
root.configure(width="600",height="600")

"""
# 창부품 개념
- 창부품이란 생성한 윈도우 창에 배치할 버튼이나 특별한 기능을 가진 요소(입력창이나 리스트박스 등등) 을 의미합니다.
- 위치를 직접 지정해줄 수도 있고, 혹은 상대적인 위치를 지정할 수도 있습니다.<br><br><br>
- 위치를 정하는 방법은 <br>
- .place(x= , y= , width= , height=) -> x좌표, y좌표, 부품너비, 부품길이
- .grid(column=, row= , padx= , pady= ) -> 가로n번째, 세로n번째, 가로축 길이, 세로축 길이
- 를 사용합니다.
"""

